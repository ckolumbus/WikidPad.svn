++ Wiki Maintenance

++ Update ext. modif. wiki files

Update externally modified wiki files (for the "Original" database backends only).

Checks if wiki page files were modified outside of WikidPad, marks them dirty in this case and rebuilds them in background. Useful if you modify page files e.g. with a text editor or if you synchronize multiple copies of your wiki (without syncing the overview database) by means of version control or e.g. Dropbox.

A file is recognized as modified by change of modification timestamp or size (both is recorded for each file in the overview database).


++ Rebuilding wiki

In menu "Wiki"->"Maintenance"->"Rebuild Wiki".

First you should know that a wiki in WikidPad contains some essential data (mainly the text of the wiki pages) and some cache data which is extracted from the essential data (list of children of a page, todos, attributes,...). Due to an error or some special operations (like adding or deleting page files from outside of WikidPad) it may happen that the cache information is deleted, invalid or not up-to-date anymore.

Rebuilding deletes and recreates all cache information

This feature can also be used to add large numbers of pages to the wiki.  Copy ".wiki" wikiword files into the data directory, then "Rebuild Wiki" to rebuild the database to include these files. This does not work for "Compact Sqlite" database type (see MigrationBetweenDbTypes for details).

[alias: RebuildTheWiki]


++ Update cache

This rebuilds only pages for which cache is marked as dirty in the database. If you save a modified page it is initially marked dirty and WikidPad starts updating the cache in the background. If you want to be sure that the cache is up-to-date but do not see a need to rebuild the whole wiki, use this function.


++ Initiate update

Marks cache of all wiki pages in the database as dirty and starts updating it in the background (after performing some operations which should be done in the foreground in any case). Use this if you need a rebuild but don't want to wait until the rebuild is done.

++ File cleanup

Find files without links and links without files. See FileCleanupDialog.

++ Show job count

Gives a rough estimation of the number of jobs waiting in the background. The number may be inexact and may be constant for some time because some done jobs create new jobs. Therefore the number of done jobs additionally shows the executed jobs since dialog was opened.


++ Open as Type

Allows to override the database type stored in wiki configuration file. Only needed in very rare cases.


++ Reconnect

In menu "Wiki"->"Maintenance"->"Reconnect".

If during a WikidPad session the access to the wiki database files is lost (e.g. network connection drops), you might get an error. To make WikidPad work again after access is reestablished, use "Reconnect".

Initially, WikidPad tries automatically to reconnect and asks if it should try to reconnect each time you try to open another page or try to save a page.

Autosave is automatically disabled after an error until a successful reconnect.


++ Optimise Database

In menu "Wiki"->"Maintenance"->"Optimise Database". This function is only available if currently loaded wiki is of type "Original Sqlite" or "Compact Sqlite".

If information is deleted from an Sqlite database, the occupied hard disk space is not freed but later reused for new information to add. "Optimise Database" makes this space available for the system again. After deleting large parts of a wiki, you can use "Optimise Database" to free space, especially recommended for a "Compact Sqlite" wiki (where the page content is also stored in the database).


++ Recover DB

This function should be used with care. It is needed if you get an error message like "database disk image is malformed" for a wiki of backend type "Compact Sqlite". This means that the database file containing the wiki was damaged. Best way to handle this would be to use a recent backup of your wiki. If you don't have one, this function may help a bit by trying to recover readable parts.

Follow these steps:

* Ensure that the damaged wiki is not opened (if necessary, open another wiki in WikidPad, maybe the help wiki, and close other WikidPad windows)
* Make a backup of the damaged wiki (if the recovery makes things worse)
* Select "Recover DB" from menu
* Answer "Yes" to the warning dialog
* Enter the full path to the wiki you want to repair (this is the path to the .wiki-file you would normally use in the "Open Wiki" dialog.
* Enter the path to the output file to create. It should have the suffix ".mpt". If the file exists already it will be overwritten, so be careful!
* After the function did its work you can have a look at the created .mpt-file. It uses the [Multipage text format] and contains what could be rescued from the wiki
* In the damaged wiki, subdirectory "data", delete "wiki.sli" (you made a backup, right?). Maybe you must terminate WikidPad before you can delete the file.
* Now open the damaged wiki regularly. It should open without error messages but is empty now.
* select in menu "Extra"->"Import". In the import dialog enter the path of the created .mpt-file as source.
* Rebuild your wiki (or just wait until all data was rebuilt automatically in background)

Now you have a brand new wiki with the recovered elements of the old one. If everything worked fine you can finally delete the .mpt-file.



++ Other things about maintenance

+++ Finding and connecting parentless nodes

As you add and remove links from the various pages in your wiki database you may end up with unlinked, or parentless, nodes.  To view them use the "parentless-nodes" node in the "Views" subtree.

Alternatively you can use menu "Navigate" -> "List Parentless Pages" or press Ctrl-Shift-Up

You can then decide if you need to relink these nodes, or if you want to delete them.

anchor: finding_undefined_links
+++ Finding undefined wiki word links

There may be also wiki word links to pages which do not exist, e. g. NonExisting. These are underlined and black in the editor. To list all such links, use the "undefined-nodes" node in the "Views" subtree. If you click on one of these links you go to an empty page for this word and can fill it with content.

Sometimes words are unintentionally marked as wiki words. In this case you can either:

    * Prefix the word with a backslash
    * Add the attribute \[camelCaseWordsEnabled: false] on a page
    * Enter the word into one of the blacklists, see WordLinking!exclude_from_linking.


[icon: cog]
